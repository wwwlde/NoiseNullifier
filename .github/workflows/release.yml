name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
          - goos: darwin
            goarch: arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: '^1.21'

    - name: Build Go app
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        CGO_ENABLED=0 go build -o ./NoiseNullifier-${{ matrix.goos }}-${{ matrix.goarch }} --ldflags '-extldflags "-static"' .

    - name: List files
      run: ls -lh

    - name: Upload artifacts
      uses: actions/upload-artifact@v2
      with:
        name: NoiseNullifier-${{ matrix.goos }}-${{ matrix.goarch }}
        path: ./NoiseNullifier-${{ matrix.goos }}-${{ matrix.goarch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download all artifacts
      uses: actions/download-artifact@v3

    - name: List all downloaded artifacts
      run: ls -la

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: |
          ./NoiseNullifier-*/*
      env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
